#include <stdio.h>
#include <stdlib.h>
#define MAX 100
typedef struct {
    int arr[MAX];
    int top;
} Stack;
void init(Stack* s) {
    s->top = -1;
}
int isEmpty(Stack* s) {
    return s->top == -1;
}
void pushStack(Stack* s, int x) {
    if (s->top == MAX - 1) return; 
    s->arr[++(s->top)] = x;
}
int popStack(Stack* s) {
    if (isEmpty(s)) return -1;
    return s->arr[(s->top)--];
}
int peek(Stack* s) {
    if (isEmpty(s)) return -1;
    return s->arr[s->top];
}
Stack s1, s2;
void enqueue(int x) {
    pushStack(&s1, x);
}
int dequeue() {
    if (isEmpty(&s2)) {
        while (!isEmpty(&s1)) {
            pushStack(&s2, popStack(&s1));
        }
    }
    if (isEmpty(&s2)) return -1;
    return popStack(&s2);
}
int main() {
    init(&s1);
    init(&s2);
    int q;
    scanf("%d", &q);
    while (q--) {
        int type;
        scanf("%d", &type);
        if (type == 1) { 
            int x;
            scanf("%d", &x);
            enqueue(x);
        } else if (type == 2) {
            printf("%d ", dequeue());
        }
    }
    return 0;
}
