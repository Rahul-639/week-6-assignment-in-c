#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#define MAX 10000
typedef struct {
    char arr[MAX];
    int front, rear, size;
} Queue;
void initQueue(Queue* q) {
    q->front = 0;
    q->rear = -1;
    q->size = 0;
}
void enqueue(Queue* q, char c) {
    q->rear = (q->rear + 1) % MAX;
    q->arr[q->rear] = c;
    q->size++;
}
char dequeue(Queue* q) {
    char val = q->arr[q->front];
    q->front = (q->front + 1) % MAX;
    q->size--;
    return val;
}
char front(Queue* q) {
    return q->arr[q->front];
}
int isEmpty(Queue* q) {
    return q->size == 0;
}
void firstNonRepeating(char* s) {
    int n = strlen(s);
    int freq[26] = {0};
    Queue q;
    initQueue(&q)
    for (int i = 0; i < n; i++) {
        char c = s[i];
        freq[c - 'a']++;
        enqueue(&q, c);
        while (!isEmpty(&q) && freq[front(&q) - 'a'] > 1) {
            dequeue(&q);
        }
        if (isEmpty(&q)) printf("#");
        else printf("%c", front(&q));
    }
    printf("\n");
}
int main() {
    char s[MAX];
    scanf("%s", s);
    firstNonRepeating(s);
    return 0;
}
